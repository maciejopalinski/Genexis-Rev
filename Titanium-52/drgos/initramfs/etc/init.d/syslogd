#!/bin/sh /etc/rc.common
START=50

SYSLOGD=`which syslogd`

set_default_config()
{
    local uci_confdir="/etc/config/"
    local cfg="syslogd"
     
    #set default level to 6, i.e. KERN_INFO
    /sbin/uci setdefault $uci_confdir/$cfg.general.level=6
    /sbin/uci setdefault $uci_confdir/$cfg.general.size=64
    /sbin/uci setdefault $uci_confdir/$cfg.general.type="circular"
    /sbin/uci setdefault $uci_confdir/$cfg.general.port=514
    /sbin/uci setdefault $uci_confdir/$cfg.general.mark=0
    #not used when type is circular
    /sbin/uci setdefault $uci_confdir/$cfg.general.file="/var/log/messages"
}

syslogd_exec () {
#!/bin/sh
#
#syslogd options
# -m MIN          Minutes between MARK lines (default=20, 0=off)
# -n              Run as a foreground process
# -O FILE         Use an alternate log file (default=/var/log/messages)
# -S              Make logging output smaller.
# -s SIZE         Max size (KB) before rotate (default=200KB, 0=off)
# -b NUM          Number of rotated logs to keep (default=1, max=99, 0=purge)
# -R HOST[:PORT]  Log to IP or hostname on PORT (default PORT=514/UDP)
# -L              Log locally and via network logging (default is network only)
# -C [size(KiB)]  Log to a circular buffer (read the buffer using logread)
    
# retrieve uci values
    config_get syslog_ip general ipaddr
    config_get syslog_port general port
    config_get syslog_size general size
    config_get syslog_type general type
    config_get syslog_mark general mark
    config_get syslog_file general file
   
    if [ -f "/bin/ipcalc.sh" ]; then
	eval $(ipcalc.sh "$syslog_ip")
    else
	eval $(ipcalc "$syslog_ip")
    fi

# build command syslog command line
    if [ "$syslog_type" = "circular" ] ; then
	SYSLOG_CMD="-C$syslog_size -m $syslog_mark ${syslog_ip:+-L -R $syslog_ip:$syslog_port}"
    else	SYSLOG_CMD="-s $syslog_size -O $syslog_file -m $syslog_mark ${syslog_ip:+-L -R $syslog_ip:$syslog_port}"
    fi
    
# start syslogd
    /sbin/syslogd $SYSLOG_CMD
    
}

klogd_exec () {
    config_get level general level
    
    if [ -n $level ]; then
	klogd -c $level
    else
	klogd
    fi
}

start () {
    . /etc/functions.sh
    
    config_load "syslogd"
    
    syslogd_exec

    klogd_exec
}

reload () {
    stop
    start
}

stop () {
    local pid
    pid=`ps  | grep $SYSLOGD | grep -v grep | awk '{print $1}'`
    kill $pid

    pkill klogd
}
