#!/bin/sh /etc/rc.common

# Copyright (c) 2011 PacketFront International AB. All rights reserved.
#
# This Software and its content are protected by the Swedish Copyright Act
# (Sw: Upphovsr<E4>ttslagen) and, if applicable, the Swedish Patents Act
# (Sw: Patentlagen). All and any copying and distribution of the software
# and its content without authorization by PacketFront International AB is
# prohibited. The prohibition includes every form of reproduction and
# distribution.
#
# Author: chafos
#

START=48
STOP=53


###############################################################
      ## Set external NAT interface ##
##############################################################
nat_external_iface()
{
    config_get LAN lan ifname 

    disable_nat_forwarding=
    	    #pieing: multiple lan interfaces is not supported in
	    #1.6.1 why there is no point to loop in this script.
	    #natexternal will only be applied on lan. Disable the loop in 
            #1.6.1 and as long multi lan is not supported.
    #for dev in $CONFIG_SECTIONS; do
        dev=lan
	local oiface phyiface proto
	config_get oiface $dev natexternaliface
	if [ -n "$oiface" ];then
	    config_get proto $oiface proto
	    config_get phyiface $oiface ifname
	    [ "$proto" = "pppoe" ] && {
	        # set NAT external interface to ppp0 when PPPoE is applied and the
                # interface has not been up yet
                # TODO: this needs to be redesigned if we support running PPPoE on
                # multiple interfaces
		echo $phyiface | grep "ppp[0-9]" || {
		    phyiface="ppp0"
		}
	    }
	    
	    [ -n "$phyiface" ] && {

		disable_nat_forwarding="true"
		
		#add NAT interface! Remove old rules, i.e. max 1 rule at the time
		iptables -t nat -I postrouting_rules -o $phyiface -j MASQUERADE
		while [ $? -eq 0 ]; do
		    iptables -t nat -D postrouting_rules 2
		done
		
                #fix bug #21478 End user can access mgmt network! Block
                #all nat traffic unless a ip rule has been defined for the
                #external upstream interface. Important, this fix may not work if
                #nat script is not executed after the route script!!

		iprule=`ip rule | grep "from all iif $LAN lookup $phyiface"`
		isthere=`iptables -nvL forward_filter_rules | grep "ACCEPT     all  --  $LAN *"`
		if [ -z "$iprule" ] && [ -n "$oiface" ] && [ "$proto" != "pppoe" ];then		
		    [ -n "$isthere" ] && iptables -D forward_filter_rules -i $LAN -j ACCEPT
		else
		    [ -z "$isthere" ] && iptables -A forward_filter_rules -i $LAN -j ACCEPT
		fi
	    }
	fi
    #done

    [ -z "$disable_nat_forwarding" ] && {
	#disable masquerade and forwarding if external interface has not been specified
	while [ $? -eq 0 ]; do
	    iptables -t nat -D postrouting_rules 1
	done
	iptables -D forward_filter_rules -i $LAN -j ACCEPT
    } 
}



reload() {
    . /etc/functions.sh

    config_load network        
    #enable the right external NAT interface
    nat_external_iface

    config_load nat
    . /lib/firewall/configure_nat_rules
    nat_process
}

start() {
    iptables -t nat -N prerouting_rules
    iptables -t nat -N postrouting_rules
    
    iptables -t nat -A PREROUTING -j prerouting_rules
    iptables -t nat -A POSTROUTING -j postrouting_rules

    reload
}

restart() {
    reload
}

stop()
{
    true
}
