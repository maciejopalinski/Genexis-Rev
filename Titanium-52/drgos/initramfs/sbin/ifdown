#!/bin/sh
# Copyright (C) 2006 OpenWrt.org

debug_ifdown=0
ifdown_log_file=/tmp/ifdown.log

[ -f /tmp/debug_ifdown ] && {
  debug_ifdown=1
  echo "$$: ifdown[$0 $@] started at $(date)" >> $ifdown_log_file
}

dbg_log() {
  [ $debug_ifdown = 1 ] && echo "$$: $@" >> $ifdown_log_file
}

. /etc/functions.sh
[ $# = 0 ] && { dbg_log "  $0 <group>"; exit; }
[ "x$1" = "x-a" ] && {
	[ -e "/tmp/resolv.conf.auto" ] && rm /tmp/resolv.conf.auto
	config_cb() {
		[ interface != "$1" -o -z "$2" ] || eval "$0 $2"
	}
	config_load network
	exit
}

#clr type to avoid that wifi is restarted, 

# remove the interface's network state
uci_revert_state network "$1"

# revert aliases state as well
config_get aliases "$1" aliases
for config in $aliases; do
	uci_revert_state network "$config"
done

include /lib/network
scan_interfaces

cfg=$1
debug "### ifdown $cfg ###"

config_get proto "$cfg" proto
[ -z "$proto" ] && { 
  dbg_log "interface not found."
  exit; 
}

config_get iface "$cfg" device
[ "static" = "$proto" ] && {
	env -i ACTION="ifdown" INTERFACE="$cfg" DEVICE="$iface" PROTO=static /sbin/hotplug-call "iface" &
}

# call interface stop handler
( type "stop_interface_$proto" ) >/dev/null 2>/dev/null && eval "stop_interface_$proto '$cfg'"

# make sure all locks are removed
for lock in "/var/lock/dhcp-$iface" "/var/lock/ppp-$iface"; do
	[ -f "$lock" ] && {
		lock -u "$lock"
		sleep 1
	}
done

# kill active ppp daemon and other processes
config_get ifname "$cfg" ifname
pids="$(head -n1 -q /var/run/${ifname}.pid /var/run/ppp-${cfg}.pid 2>/dev/null)"
for pid in $pids; do 
	[ -d "/proc/$pid" ] && {
		kill $pid
		[ -d "/proc/$pid" ] && {
			sleep 1
			kill -9 $pid 2>/dev/null >/dev/null
		}
	}
done
rm -f /var/run/${ifname}.pid /var/run/ppp-${cfg}.pid

config_get ifname "$cfg" ifname
config_get device "$cfg" device

[ ."$device" != ."$ifname" ] || device=
for dev in $ifname $device; do
    ifconfig "$dev" 0.0.0.0 down >/dev/null 2>/dev/null	
done

# remove the interface's network state
uci_revert_state network "$1"

# revert aliases state as well
config_get aliases "$1" aliases
for config in $aliases; do
	uci_revert_state network "$config"
done
