#!/bin/sh
security_level=`uci get firewall.general.security_level`
natenable=`uci get nat.general.nat`
proto=`uci get network.wan.proto`
if [ "$proto" == "pppoe" ];then
WAN=ppp0
else
WAN=`uci get network.wan.ifname`
fi
#LAN=`uci get network.lan.ifname`
#LOGLIMIT="2/s"
#LOGLIMITBURST="10"

###When security level is "High Security"
if [ "$security_level" == "high" ]
then

  ### INPUT
	###  (connections with the router as destination)
	iptables -A INPUT -m state --state INVALID -j DROP
	iptables -A INPUT -j input_rule
	iptables -A INPUT ! -i $WAN -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
	iptables -A INPUT -p tcp --tcp-flags SYN SYN ! --tcp-option  2 -j  DROP

#	iptables -A INPUT -j LOGDROP
	
	# Accept anything not coming from the WAN interface (i.e. eth1:MSP, eth2:lan, and if present Wifi)
	iptables -A INPUT ! -i $WAN -j ACCEPT
	iptables -A INPUT -p icmp -j ACCEPT
	iptables -P INPUT DROP
	# reject (what to do with anything not allowed earlier)
#	iptables -A INPUT -p tcp -j REJECT --reject-with tcp-reset
#	iptables -A INPUT -j REJECT --reject-with icmp-port-unreachable

  ### OUTPUT
	iptables -P OUTPUT ACCEPT
	iptables -A OUTPUT -m state --state INVALID -j DROP
	iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
#	iptables -A OUTPUT -j LOGDROP

  ### FORWARDING
	### (connections routed through the router)
	iptables -P FORWARD DROP
	iptables -A FORWARD -m state --state INVALID -j DROP
#	iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
#	iptables -A FORWARD -i ! $WAN -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
	iptables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
#	iptables -A FORWARD -j LOGDROP
	iptables -A FORWARD -j forwarding_rule_nat
	iptables -A FORWARD -j forwarding_rule_filter

  ### MASQ
	iptables -t nat -A PREROUTING -j prerouting_rule_nat
	iptables -t nat -A PREROUTING -j prerouting_rule_filter
	iptables -t nat -A POSTROUTING -j postrouting_rule

	if [ "$natenable" == "enable" ];then
	[ -z "$WAN" ] || iptables -t nat -A POSTROUTING -o $WAN -j MASQUERADE
#		[ -z "$WAN" ] || iptables -t nat -A PREROUTING -i $WAN -j DROP
	fi
	[ -n "$WAN" -a "$WAN" = "ppp0" ] && iptables -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
	[ -n "$WAN" -a "$WAN" = "eth0" ] && iptables -t mangle -D POSTROUTING -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu 2>&- >&-
	/lib/firewall/configure_nat_rules
#	/lib/firewall/configure_firewall_rules firewall-high
	/lib/firewall/configure_filter_rules
fi

###When security level is "Low Security"
if [ "$security_level" == "low" ]
then

  ### INPUT
	###  (connections with the router as destination)
	iptables -A INPUT -m state --state INVALID -j DROP
	iptables -A INPUT -j input_rule
	iptables -A INPUT ! -i $WAN -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
	iptables -A INPUT -p tcp --tcp-flags SYN SYN ! --tcp-option 2 -j  DROP

#	iptables -A INPUT -j LOGDROP

	# Accept anything not coming from the WAN interface (i.e. eth1:MSP, eth2:lan, and if present Wifi)
	iptables -A INPUT ! -i $WAN -j ACCEPT
	iptables -A INPUT -p icmp -j ACCEPT
	iptables -P INPUT DROP
	# reject (what to do with anything not allowed earlier)
#	iptables -A INPUT -p tcp -j REJECT --reject-with tcp-reset
#	iptables -A INPUT -j REJECT --reject-with icmp-port-unreachable

  ### OUTPUT
	iptables -P OUTPUT ACCEPT
	iptables -A OUTPUT -m state --state INVALID -j DROP
	iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
#	iptables -A OUTPUT -j LOGDROP

  ### FORWARDING
	### (connections routed through the router)
	iptables -P FORWARD DROP
	iptables -A FORWARD -m state --state INVALID -j DROP
#	iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
	iptables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
#	iptables -A FORWARD -j LOGDROP
	iptables -A FORWARD -j forwarding_rule_nat
	iptables -A FORWARD -j forwarding_rule_filter
	# Forward anything not coming from the WAN interface (i.e. eth1:MSP, eth2:lan, and if present Wifi)
	iptables -A FORWARD ! -i $WAN -j ACCEPT

  ### MASQ
	iptables -t nat -A PREROUTING -j prerouting_rule_nat
	iptables -t nat -A PREROUTING -j prerouting_rule_filter
	iptables -t nat -A POSTROUTING -j postrouting_rule

	if [ "$natenable" == "enable" ];then
	[ -z "$WAN" ] || iptables -t nat -A POSTROUTING -o $WAN -j MASQUERADE
#	[ -z "$WAN" ] || iptables -t nat -A PREROUTING -i $WAN -j DROP
	fi
	[ -n "$WAN" -a "$WAN" = "ppp0" ] && iptables -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
	[ -n "$WAN" -a "$WAN" = "eth0" ] && iptables -t mangle -D POSTROUTING -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu 2>&- >&-
	/lib/firewall/configure_nat_rules
#	/lib/firewall/configure_firewall_rules firewall-low
	/lib/firewall/configure_filter_rules
fi

###When security level is "No Security"
if [ "$security_level" == "no" ]
then

  ### INPUT
#	iptables -A INPUT -j LOGDROP
	iptables -A INPUT -j input_rule
	iptables -P INPUT ACCEPT

  ### OUTPUT
	iptables -P OUTPUT ACCEPT
#	iptables -A OUTPUT -j LOGDROP

  ### FORWARDING
	iptables -P FORWARD ACCEPT
#	iptables -A FORWARD -j LOGDROP
	iptables -A FORWARD -j forwarding_rule_nat
	iptables -A FORWARD -j forwarding_rule_filter

  ### MASQ
	iptables -t nat -A PREROUTING -j prerouting_rule_nat
	iptables -t nat -A PREROUTING -j prerouting_rule_filter

	if [ "$natenable" == "enable" ];then
	[ -z "$WAN" ] || iptables -t nat -A POSTROUTING -o $WAN -j MASQUERADE
#	[ -z "$WAN" ] || iptables -t nat -A PREROUTING -i $WAN -j DROP
	[ -z "$WAN" ] || iptables -A FORWARD -i $WAN -m state --state NEW -j DROP
	fi
	[ -n "$WAN" -a "$WAN" = "ppp0" ] && iptables -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
	[ -n "$WAN" -a "$WAN" = "eth0" ] && iptables -t mangle -D POSTROUTING -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu 2>&- >&-
	/lib/firewall/configure_nat_rules
	/lib/firewall/configure_filter_rules
fi
